{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "A GlusterFS peer server.",

    "Parameters": {
        "Name": {
            "Type": "String",
            "Description": "The name of the server."
        },
        "Domain": {
            "Type": "String",
            "Description": "The domain containing the server. The name plus the domain, separated by a dot, make up the server's fully qualified domain name."
        },
        "KeyName": {
            "Type": "String",
            "Default": "internal",
            "Description": "SSH key name used to connect to the server via the ec2-user account.",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "AWSMusingsS3URL": {
            "Type": "String",
            "Default": "https://s3-us-west-2.amazonaws.com/aws-musings",
            "Description": "S3 path to aws-musings."
        },
        "SubnetId": {
            "Type": "String",
            "Description": "The id of the subnet where the server will be added."
        },
        "SecurityGroupId": {
            "Type": "String",
            "Description": "The id of the security group protecting the server."
        },
        "ProjectName": {
            "Type": "String",
            "Default": "Distributed Delivery",
            "Description": "The name of the project."
        },
        "ProjectPOC": {
            "Type": "String",
            "Default": "Steve Parker",
            "Description": "The point of contact for the project."
        },
        "ProjectWBSCode": {
            "Type": "String",
            "Default": "DISTDEL.EXP.14",
            "Description": "The work breakdown structure code for the project."
        },
        "ProjectPONumber": {
            "Type": "String",
            "Default": "TBD",
            "Description": "The purchase order number for the project."
        },
        "ExpirationDate": {
            "Type": "String",
            "Default": "20141120",
            "Description": "The expiration date for the project."
        }
    },

    "Resources": {
        "Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [ "", [
                                        "[main]\n",
                                        "stack=", { "Ref": "AWS::StackId" }, "\n",
                                        "region=", { "Ref": "AWS::Region" }, "\n"
                                    ] ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },

                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [ "", [
                                        "[cfn-auto-reloader-hook]\n",
                                        "triggers=post.update\n",
                                        "path=Resources.Instance.Metadata.AWS::CloudFormation::Init\n",
                                        "action=/opt/aws/bin/cfn-init -s ", { "Ref": "AWS::StackId" },
                                            " -r Instance ", " --region ", { "Ref": "AWS::Region" }, "\n",
                                        "runas=root\n"
                                    ] ]
                                }
                            },

                            "/etc/dhcp/dhclient.conf": {
                                "source": { "Fn::Join": [ "/", [ { "Ref": "AWSMusingsS3URL" }, "dhclient.conf" ] ] },
                                "context": {
                                    "FQDN": { "Fn::Join": [ "", [ { "Ref": "Name" }, ".", { "Ref": "Domain" } ] ] }
                                }
                            },

                            "/home/ec2-user/.bashrc": {
                                "source": { "Fn::Join": [ "/", [ { "Ref": "AWSMusingsS3URL" }, "bashrc.sh" ] ] },
                                "mode": "000644",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/root/.bashrc": {
                                "source": { "Fn::Join": [ "/", [ { "Ref": "AWSMusingsS3URL" }, "bashrc.sh" ] ] },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "DisableApiTermination": "FALSE",
                "ImageId": "ami-d13845e1",
                "InstanceType": "t2.micro",
                "KeyName": { "Ref": "KeyName" },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Ref": "Name" }
                    },
                    {
                        "Key": "AWSAccountID",
                        "Value": { "Ref": "AWS::AccountId" }
                    },
                    {
                        "Key": "ProjectName",
                        "Value": { "Ref": "ProjectName" }
                    },
                    {
                        "Key": "ProjectPOC",
                        "Value": { "Ref": "ProjectPOC" }
                    },
                    {
                        "Key": "ProjectWBSCode",
                        "Value": { "Ref": "ProjectWBSCode" }
                    },
                    {
                        "Key": "ProjectPONumber",
                        "Value": { "Ref": "ProjectPONumber" }
                    },
                    {
                        "Key": "ExpirationDate",
                        "Value": { "Ref": "ExpirationDate" }
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "false",
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": { "Ref": "SubnetId" },
                        "GroupSet": [ { "Ref": "SecurityGroupId" } ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash\n",

                            "# Helper function\n",
                            "function error_exit\n",
                            "{\n",
                            "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref": "InstanceWaitHandle" }, "'\n",
                            "  exit 1\n",
                            "}\n",

                            "yum update -y || error_exit 'yum update failed'\n",

                            "sed -i -e \"s/localhost/", { "Ref": "Name" }, "/g\" /etc/sysconfig/network\n",
                            "sed -i -e \"s/localhost localhost.localdomain/", { "Ref": "Name"  }, " ", { "Ref": "Name" } , ".localdomain localhost localhost.localdomain/g\" /etc/hosts\n",

                            "# Initialize CloudFormation\n",
                            "/opt/aws/bin/cfn-init -s ", { "Ref": "AWS::StackId" }, " -r Instance ",
                                "--region ", { "Ref": "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

                            "# Start up the cfn-hup daemon to listen for changes to the metadata\n",
                            "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",

                            "# All done so signal success\n",
                            "/opt/aws/bin/cfn-signal -e 0 -r \"Instance setup complete\" '", { "Ref": "InstanceWaitHandle" }, "'\n",
                            "reboot\n"
                        ]]
                    }
                }
            }
        },

        "InstanceWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },

        "InstanceWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "Instance",
            "Properties": {
                "Handle": { "Ref": "InstanceWaitHandle" },
                "Timeout": "300"
            }
        }

    }

}
