{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "The primary VPC's bastion server.",

    "Parameters": {
        "AvailabilityZone": {
            "Type": "String",
            "Default": "us-west-2a",
            "Description": "Availability zone where primary VPC instances such as the NAT and bastion servers will be placed."
        },
        "KeyName": {
            "Type": "String",
            "Default": "default",
            "Description": "SSH key name used to connect with the bastion server via the ec2-user account.",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "BashRCSource": {
            "Type": "String",
            "Default": "https://raw.githubusercontent.com/myshkin5/aws-musings/master/bashrc.sh",
            "Description": "Web location of .bashrc to be installed on system accounts."
        },
        "VPCId": {
            "Type": "String",
            "Description": "The id of the VPC where the bastion server will be added."
        },
        "VPCName": {
            "Type": "String",
            "Description": "The name of the VPC. Used in names of objects."
        },
        "SubnetId": {
            "Type": "String",
            "Description": "The id of the subnet where the server will be added."
        }
    },

    "Resources": {
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "bastion server security group",
                "VpcId": { "Ref": "VPCId" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "VPCName" }, "bastion-sg" ] ] }
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "24.9.253.190/32"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "BastionInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": ["", [ "[main]\n",
                                        "stack=", { "Ref": "AWS::StackId" }, "\n",
                                        "region=", { "Ref": "AWS::Region" }, "\n"
                                    ]]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },

                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": ["", [
                                        "[cfn-auto-reloader-hook]\n",
                                        "triggers=post.update\n",
                                        "path=Resources.BastionInstance.Metadata.AWS::CloudFormation::Init\n",
                                        "action=/opt/aws/bin/cfn-init -s ", { "Ref": "AWS::StackId" },
                                            " -r BastionInstance ", " --region     ", { "Ref": "AWS::Region" }, "\n",
                                        "runas=root\n"
                                    ]]
                                }
                            },

                            "/home/ec2-user/.bashrc": {
                                "source": { "Ref": "BashRCSource" },
                                "mode": "000644",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/root/.bashrc": {
                                "source": { "Ref": "BashRCSource" },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone" },
                "DisableApiTermination": "FALSE",
                "ImageId": "ami-d13845e1",
                "InstanceType": "t2.micro",
                "KeyName": { "Ref": "KeyName" },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "VPCName" }, "bastion" ] ] }
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": { "Ref": "SubnetId" },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.0.0.10",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [ { "Ref": "BastionSecurityGroup" } ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "Content-Type: multipart/mixed; boundary=\"===============1111144319324777743==\"\n",
                            "MIME-Version: 1.0\n",
                            "\n",
                            "--===============1111144319324777743==\n",
                            "Content-Type: text/x-shellscript; charset=\"us - ascii\"\n",
                            "MIME-Version: 1.0\n",
                            "Content-Transfer-Encoding: 7bit\n",
                            "Content-Disposition: attachment; filename=\"part1\"\n",
                            "#!/bin/bash\n",

                            "# Helper function\n",
                            "function error_exit\n",
                            "{\n",
                            "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref": "BastionInstanceWaitHandle" }, "'\n",
                            "  exit 1\n",
                            "}\n",

                            "yum update -y || error_exit 'yum update failed'\n",

                            "sed -i -e \"s/localhost/", { "Ref": "VPCName" }, "-bastion/g\" /etc/sysconfig/network\n",
                            "sed -i -e \"s/localhost localhost.localdomain/", { "Ref": "VPCName" }, "-bastion ", { "Ref": "VPCName" }, "-bastion.localdomain localhost localhost.localdomain/g\" /etc/hosts\n",

                            "# Initialize CloudFormation\n",
                            "/opt/aws/bin/cfn-init -s ", { "Ref": "AWS::StackId" }, " -r BastionInstance ",
                            "         --region ", { "Ref": "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

                            "# Start up the cfn-hup daemon to listen for changes to the metadata\n",
                            "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",

                            "# All done so signal success\n",
                            "/opt/aws/bin/cfn-signal -e 0 -r \"BastionInstance setup complete\" '", { "Ref": "BastionInstanceWaitHandle" }, "'\n",
                            "\n",
                            "--===============1111144319324777743==\n",
                            "Content-Type: text/cloud-config; charset=\"us - ascii\"\n",
                            "Content-Transfer-Encoding: 7bit\n",
                            "Content-Disposition: attachment; filename=\"part2\"\n",
                            "#cloud-config\n",
                            "power_state:\n",
                            " delay: \"+1\"\n",
                            " mode: reboot\n",
                            " message: Initialized\n",
                            " timeout: 30\n",
                            "\n",
                            "--===============1111144319324777743==--"
                        ]]
                    }
                }
            }
        },

        "BastionInstanceWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },

        "BastionInstanceWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "BastionInstance",
            "Properties": {
                "Handle": { "Ref": "BastionInstanceWaitHandle" },
                "Timeout": "300"
            }
        }

    }

}
