{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Creates a bastion VPC with a NAT and jump server. Project specific VPCs are connected to this VPC.",

    "Parameters": {
        "ShortName": {
            "Type": "String",
            "Default": "bastion",
            "Description": "Short name of the new VPC. Name will have the AWS Region and '-vpc' appended (i.e.: bastion-us-west-2-vpc)."
        },
        "AvailabilityZone": {
            "Type": "String",
            "Description": "Availability zone where bastion VPC instances such as the NAT and jump servers will be placed."
        }
    },

    "Resources": {
        "BastionVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AWS::Region" }, "vpc" ] ] }
                    }
                ]
            }
        },

        "Subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone": { "Ref": "AvailabilityZone" },
                "VpcId": { "Ref": "BastionVPC" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AvailabilityZone" }, "subnet" ] ] }
                    }
                ]
            }
        },

        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AWS::Region" }, "igw" ] ] }
                    }
                ]
            }
        },

        "DHCPOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AWS::Region" }, "dopt" ] ] }
                    }
                ],
                "DomainName": { "Fn::Join": [ ".", [ { "Ref": "AWS::Region" }, "compute.internal" ] ] },
                "DomainNameServers": [ "AmazonProvidedDNS" ]
            }
        },

        "NetworkACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": { "Ref": "BastionVPC" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AWS::Region" }, "acl" ] ] }
                    }
                ]
            }
        },

        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "BastionVPC" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, { "Ref": "AWS::Region" }, "rtb" ] ] }
                    }
                ]
            }
        },

        "BastionInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone" },
                "DisableApiTermination": "FALSE",
                "ImageId": "ami-d13845e1",
                "InstanceType": "t2.micro",
                "KeyName": "default",
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, "jump" ] ] }
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": { "Ref": "Subnet" },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.0.0.10",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "BastionSecurityGroup"
                            }
                        ]
                    }
                ]
            }
        },

        "NATInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": { "Ref": "AvailabilityZone" },
                "DisableApiTermination": "FALSE",
                "ImageId": "ami-f032acc0",
                "InstanceType": "t1.micro",
                "KernelId": "aki-fc37bacc",
                "KeyName": "internal",
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ { "Ref": "ShortName" }, "nat" ] ] }
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": { "Ref": "Subnet" },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.0.0.11",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [ { "Ref": "NATSecurityGroup" }, { "Ref": "PrivateSecurityGroup" } ]
                    }
                ]
            }
        },

        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "bastion host security group",
                "VpcId": { "Ref": "BastionVPC" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "24.9.253.190/32"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "NATSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "network address translation security group",
                "VpcId": { "Ref": "BastionVPC" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "10.0.0.0/16"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "PrivateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "private security group",
                "VpcId": { "Ref": "BastionVPC" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "10.0.0.0/16"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": { "Ref": "NetworkACL" },
                "SubnetId": { "Ref": "Subnet" }
            }
        },

        "GatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": { "Ref": "BastionVPC" },
                "InternetGatewayId": { "Ref": "InternetGateway" }
            }
        },

        "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "RouteTable" },
                "SubnetId": { "Ref": "Subnet" }
            }
        },

        "SubnetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": { "Ref": "RouteTable" },
                "GatewayId": { "Ref": "InternetGateway" }
            },
            "DependsOn": "GatewayAttachment"
        },

        "VPCDHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": { "Ref": "BastionVPC" },
                "DhcpOptionsId": { "Ref": "DHCPOptions" }
            }
        }

    }

}
